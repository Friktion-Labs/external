[{"/Users/alexwlezien/Friktion/volt/friktion-utils/src/associatedToken.ts":"1","/Users/alexwlezien/Friktion/volt/friktion-utils/src/index.ts":"2","/Users/alexwlezien/Friktion/volt/friktion-utils/src/instructionHelpers.ts":"3","/Users/alexwlezien/Friktion/volt/friktion-utils/src/sendTransactionHelpers.ts":"4","/Users/alexwlezien/Friktion/volt/friktion-utils/src/token.ts":"5","/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/TimeoutError.ts":"6","/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/TransactionError.ts":"7","/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/index.ts":"8","/Users/alexwlezien/Friktion/volt/friktion-utils/src/utils.ts":"9"},{"size":1827,"mtime":1663100925691,"results":"10","hashOfConfig":"11"},{"size":202,"mtime":1663100905136,"results":"12","hashOfConfig":"11"},{"size":6179,"mtime":1663101097065,"results":"13","hashOfConfig":"11"},{"size":11800,"mtime":1663100960625,"results":"14","hashOfConfig":"11"},{"size":4329,"mtime":1662269319592,"results":"15","hashOfConfig":"11"},{"size":260,"mtime":1658779369739,"results":"16","hashOfConfig":"11"},{"size":681,"mtime":1663101010308,"results":"17","hashOfConfig":"11"},{"size":68,"mtime":1663100905137,"results":"18","hashOfConfig":"11"},{"size":1113,"mtime":1663100905136,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"192qmw1",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":30,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexwlezien/Friktion/volt/friktion-utils/src/associatedToken.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/index.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/instructionHelpers.ts",["47","48","49","50"],["51","52","53"],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/sendTransactionHelpers.ts",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],["88"],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/token.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/TimeoutError.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/TransactionError.ts",[],["89","90"],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/index.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/utils.ts",[],[],{"ruleId":"91","severity":2,"message":"92","line":66,"column":21,"nodeType":"93","messageId":"94","endLine":66,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":252,"column":43,"nodeType":"97","messageId":"98","endLine":252,"endColumn":46,"suggestions":"99"},{"ruleId":"100","severity":2,"message":"101","line":257,"column":3,"nodeType":"102","messageId":"103","endLine":257,"endColumn":16},{"ruleId":"104","severity":2,"message":"105","line":259,"column":60,"nodeType":"106","messageId":"107","endLine":259,"endColumn":65},{"ruleId":"108","severity":1,"message":"109","line":22,"column":7,"nodeType":"106","messageId":"110","endLine":22,"endColumn":25,"suppressions":"111"},{"ruleId":"112","severity":2,"message":"113","line":62,"column":28,"nodeType":"114","messageId":"115","endLine":67,"endColumn":6,"suppressions":"116"},{"ruleId":"117","severity":2,"message":"118","line":70,"column":12,"nodeType":"119","messageId":"94","endLine":70,"endColumn":16,"suppressions":"120"},{"ruleId":"121","severity":2,"message":"122","line":73,"column":26,"nodeType":"123","messageId":"124","endLine":73,"endColumn":41},{"ruleId":"125","severity":2,"message":"126","line":73,"column":26,"nodeType":"123","messageId":"127","endLine":73,"endColumn":41},{"ruleId":"125","severity":2,"message":"128","line":78,"column":7,"nodeType":"123","messageId":"127","endLine":78,"endColumn":23},{"ruleId":"125","severity":2,"message":"126","line":79,"column":64,"nodeType":"123","messageId":"127","endLine":79,"endColumn":79},{"ruleId":"129","severity":2,"message":"130","line":80,"column":5,"nodeType":"131","messageId":"132","endLine":80,"endColumn":53},{"ruleId":"125","severity":2,"message":"133","line":80,"column":18,"nodeType":"123","messageId":"127","endLine":80,"endColumn":39},{"ruleId":"134","severity":2,"message":"135","line":80,"column":18,"nodeType":"123","messageId":"136","endLine":80,"endColumn":39},{"ruleId":"121","severity":2,"message":"137","line":82,"column":22,"nodeType":"138","messageId":"139","endLine":82,"endColumn":48},{"ruleId":"140","severity":2,"message":"141","line":141,"column":3,"nodeType":"142","messageId":"143","endLine":153,"endColumn":8,"suggestions":"144"},{"ruleId":"140","severity":2,"message":"141","line":146,"column":7,"nodeType":"142","messageId":"143","endLine":148,"endColumn":10,"suggestions":"145"},{"ruleId":"95","severity":1,"message":"96","line":162,"column":17,"nodeType":"97","messageId":"98","endLine":162,"endColumn":20,"suggestions":"146"},{"ruleId":"125","severity":2,"message":"147","line":163,"column":9,"nodeType":"123","messageId":"127","endLine":163,"endColumn":20},{"ruleId":"100","severity":2,"message":"101","line":210,"column":3,"nodeType":"102","messageId":"103","endLine":210,"endColumn":16},{"ruleId":"148","severity":2,"message":"149","line":211,"column":9,"nodeType":"150","messageId":"151","endLine":211,"endColumn":59},{"ruleId":"134","severity":2,"message":"135","line":211,"column":27,"nodeType":"123","messageId":"136","endLine":211,"endColumn":49},{"ruleId":"148","severity":2,"message":"149","line":212,"column":9,"nodeType":"150","messageId":"151","endLine":212,"endColumn":64},{"ruleId":"125","severity":2,"message":"152","line":212,"column":30,"nodeType":"123","messageId":"127","endLine":212,"endColumn":54},{"ruleId":"134","severity":2,"message":"135","line":212,"column":30,"nodeType":"123","messageId":"136","endLine":212,"endColumn":54},{"ruleId":"95","severity":1,"message":"96","line":213,"column":17,"nodeType":"97","messageId":"98","endLine":213,"endColumn":20,"suggestions":"153"},{"ruleId":"100","severity":2,"message":"101","line":220,"column":3,"nodeType":"102","messageId":"103","endLine":220,"endColumn":16},{"ruleId":"148","severity":2,"message":"149","line":221,"column":9,"nodeType":"150","messageId":"151","endLine":221,"endColumn":72},{"ruleId":"134","severity":2,"message":"135","line":221,"column":21,"nodeType":"123","messageId":"136","endLine":221,"endColumn":43},{"ruleId":"125","severity":2,"message":"154","line":222,"column":7,"nodeType":"123","messageId":"127","endLine":222,"endColumn":16},{"ruleId":"155","severity":2,"message":"156","line":223,"column":21,"nodeType":"157","messageId":"158","endLine":223,"endColumn":75},{"ruleId":"125","severity":2,"message":"154","line":223,"column":58,"nodeType":"123","messageId":"127","endLine":223,"endColumn":67},{"ruleId":"129","severity":2,"message":"130","line":225,"column":3,"nodeType":"131","messageId":"132","endLine":225,"endColumn":21},{"ruleId":"125","severity":2,"message":"159","line":225,"column":10,"nodeType":"123","messageId":"127","endLine":225,"endColumn":20},{"ruleId":"140","severity":2,"message":"141","line":268,"column":3,"nodeType":"142","messageId":"143","endLine":276,"endColumn":8,"suggestions":"160"},{"ruleId":"140","severity":2,"message":"141","line":271,"column":7,"nodeType":"142","messageId":"143","endLine":273,"endColumn":10,"suggestions":"161"},{"ruleId":"95","severity":1,"message":"96","line":284,"column":17,"nodeType":"97","messageId":"98","endLine":284,"endColumn":20,"suggestions":"162"},{"ruleId":"125","severity":2,"message":"147","line":285,"column":9,"nodeType":"123","messageId":"127","endLine":285,"endColumn":20},{"ruleId":"140","severity":2,"message":"141","line":343,"column":5,"nodeType":"142","messageId":"143","endLine":427,"endColumn":10,"suggestions":"163"},{"ruleId":"108","severity":1,"message":"164","line":355,"column":20,"nodeType":"106","messageId":"110","endLine":355,"endColumn":27},{"ruleId":"140","severity":2,"message":"141","line":376,"column":9,"nodeType":"142","messageId":"143","endLine":422,"endColumn":14,"suggestions":"165"},{"ruleId":"95","severity":1,"message":"96","line":66,"column":10,"nodeType":"97","messageId":"98","endLine":66,"endColumn":13,"suggestions":"166","suppressions":"167"},{"ruleId":"148","severity":2,"message":"149","line":23,"column":7,"nodeType":"168","messageId":"151","endLine":23,"endColumn":67,"suppressions":"169"},{"ruleId":"125","severity":2,"message":"170","line":23,"column":31,"nodeType":"123","messageId":"127","endLine":23,"endColumn":67,"suppressions":"171"},"no-empty","Empty block statement.","BlockStatement","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["172","173"],"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment","@typescript-eslint/restrict-template-expressions","Invalid type \"PublicKey\" of template literal expression.","Identifier","invalidType","@typescript-eslint/no-unused-vars","'TransactionMachine' is defined but never used. Allowed unused vars must match /^_/u.","unusedVar",["174"],"@typescript-eslint/no-misused-promises","Promise returned in function argument where a void return was expected.","ArrowFunctionExpression","voidReturnArgument",["175"],"no-constant-condition","Unexpected constant condition.","Literal",["176"],"@typescript-eslint/no-unsafe-argument","Unsafe argument of type `any` assigned to a parameter of type `PublicKey`.","MemberExpression","unsafeArgument","@typescript-eslint/no-unsafe-member-access","Unsafe member access .publicKey on an `any` value.","unsafeMemberExpression","Unsafe member access .connected on an `any` value.","@typescript-eslint/no-unsafe-return","Unsafe return of an `any` typed value.","ReturnStatement","unsafeReturn","Unsafe member access .signTransaction on an `any` value.","@typescript-eslint/no-unsafe-call","Unsafe call of an `any` typed value.","unsafeCall","Unsafe spread of an `any` array type.","SpreadElement","unsafeArraySpread","@typescript-eslint/no-floating-promises","Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["177"],["178"],["179","180"],"Unsafe member access .timeout on an `any` value.","@typescript-eslint/no-unsafe-assignment","Unsafe assignment of an `any` value.","VariableDeclarator","anyAssignment","Unsafe member access .toString on an `any` value.",["181","182"],"Unsafe member access .error on an `any` value.","@typescript-eslint/restrict-plus-operands","Operands of '+' operation with any is possible only with string, number, bigint or any","BinaryExpression","notValidAnys","Unsafe member access .result on an `any` value.",["183"],["184"],["185","186"],["187"],"'context' is defined but never used. Allowed unused args must match /^_/u.",["188"],["189","190"],["191"],"AssignmentExpression",["192"],"Unsafe member access .InstructionError on an `any` value.",["193"],{"messageId":"194","fix":"195","desc":"196"},{"messageId":"197","fix":"198","desc":"199"},{"kind":"200","justification":"201"},{"kind":"200","justification":"201"},{"kind":"200","justification":"201"},{"messageId":"202","fix":"203","desc":"204"},{"messageId":"202","fix":"205","desc":"204"},{"messageId":"194","fix":"206","desc":"196"},{"messageId":"197","fix":"207","desc":"199"},{"messageId":"194","fix":"208","desc":"196"},{"messageId":"197","fix":"209","desc":"199"},{"messageId":"202","fix":"210","desc":"204"},{"messageId":"202","fix":"211","desc":"204"},{"messageId":"194","fix":"212","desc":"196"},{"messageId":"197","fix":"213","desc":"199"},{"messageId":"202","fix":"214","desc":"204"},{"messageId":"202","fix":"215","desc":"204"},{"messageId":"194","fix":"216","desc":"196"},{"messageId":"197","fix":"217","desc":"199"},{"kind":"200","justification":"201"},{"kind":"200","justification":"201"},{"kind":"200","justification":"201"},"suggestUnknown",{"range":"218","text":"219"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"218","text":"220"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","directive","","floatingFixVoid",{"range":"221","text":"222"},"Add void operator to ignore.",{"range":"223","text":"224"},{"range":"225","text":"219"},{"range":"225","text":"220"},{"range":"226","text":"219"},{"range":"226","text":"220"},{"range":"227","text":"228"},{"range":"229","text":"224"},{"range":"230","text":"219"},{"range":"230","text":"220"},{"range":"231","text":"232"},{"range":"233","text":"234"},{"range":"235","text":"219"},{"range":"235","text":"220"},[5828,5831],"unknown","never",[3450,3864],"void (async () => {\n    // TODO - make sure this works well on mainnet\n    while (!done && getUnixTs() - startTime < timeout / 1000) {\n      await sleep(retrySleep);\n      // console.log(new Date().toUTCString(), ' sending tx ', txid);\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      if (retrySleep <= 6000) {\n        retrySleep = retrySleep * 2;\n      }\n    }\n  })();",[3687,3773],"void connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });",[4010,4013],[5636,5639],[7008,7233],"void (async () => {\n    await sleep(500);\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(1000);\n    }\n  })();",[7108,7194],[7378,7381],[9100,11580],"void (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log(new Date().toUTCString(), \"Timed out for txid: \", txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        subscriptionId = connection.onSignature(\n          txid,\n          (result, context) => {\n            subscriptionId = undefined;\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              // lastSlot = context?.slot;\n              resolve(result);\n            }\n          },\n          \"confirmed\"\n        );\n      } catch (e) {\n        done = true;\n        console.log(new Date().toUTCString(), \"WS error in setup\", txid, e);\n      }\n      let retrySleep = 1500;\n      console.log(\"polling tx \", txid);\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        await sleep(retrySleep);\n        (async () => {\n          try {\n            const response = await connection.getSignatureStatuses([txid]);\n\n            const result = response && response.value[0];\n            if (!done) {\n              if (!result) {\n                // console.log(\"REST null result for\", txid, result);\n              } else if (result.err) {\n                console.log(\n                  new Date().toUTCString(),\n                  \"REST error for\",\n                  txid,\n                  result\n                );\n                done = true;\n                reject(result.err);\n              } else if (\n                !(\n                  result.confirmations ||\n                  confirmLevels.includes(result.confirmationStatus)\n                )\n              ) {\n                console.log(\n                  new Date().toUTCString(),\n                  \"REST not confirmed\",\n                  txid,\n                  result\n                );\n              } else {\n                // lastSlot = response?.context?.slot;\n                // console.log('REST confirmed', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log(\n                new Date().toUTCString(),\n                \"REST connection error: txid\",\n                txid,\n                e\n              );\n            }\n          }\n        })();\n        if (retrySleep <= 1600) {\n          retrySleep = retrySleep * 2;\n        }\n      }\n    })();",[10041,11479],"void (async () => {\n          try {\n            const response = await connection.getSignatureStatuses([txid]);\n\n            const result = response && response.value[0];\n            if (!done) {\n              if (!result) {\n                // console.log(\"REST null result for\", txid, result);\n              } else if (result.err) {\n                console.log(\n                  new Date().toUTCString(),\n                  \"REST error for\",\n                  txid,\n                  result\n                );\n                done = true;\n                reject(result.err);\n              } else if (\n                !(\n                  result.confirmations ||\n                  confirmLevels.includes(result.confirmationStatus)\n                )\n              ) {\n                console.log(\n                  new Date().toUTCString(),\n                  \"REST not confirmed\",\n                  txid,\n                  result\n                );\n              } else {\n                // lastSlot = response?.context?.slot;\n                // console.log('REST confirmed', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log(\n                new Date().toUTCString(),\n                \"REST connection error: txid\",\n                txid,\n                e\n              );\n            }\n          }\n        })();",[1345,1348]]