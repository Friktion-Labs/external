[{"/Users/alexwlezien/Friktion/volt/friktion-utils/src/associatedToken.ts":"1","/Users/alexwlezien/Friktion/volt/friktion-utils/src/index.ts":"2","/Users/alexwlezien/Friktion/volt/friktion-utils/src/instructionHelpers.ts":"3","/Users/alexwlezien/Friktion/volt/friktion-utils/src/sendTransactionHelpers.ts":"4","/Users/alexwlezien/Friktion/volt/friktion-utils/src/token.ts":"5","/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/TimeoutError.ts":"6","/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/TransactionError.ts":"7","/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/index.ts":"8","/Users/alexwlezien/Friktion/volt/friktion-utils/src/utils.ts":"9","/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionMachine.ts":"10"},{"size":1827,"mtime":1663791631825,"results":"11","hashOfConfig":"12"},{"size":240,"mtime":1663795404640,"results":"13","hashOfConfig":"12"},{"size":2469,"mtime":1663797317049,"results":"14","hashOfConfig":"12"},{"size":11800,"mtime":1663371847490,"results":"15","hashOfConfig":"12"},{"size":4329,"mtime":1663117564425,"results":"16","hashOfConfig":"12"},{"size":260,"mtime":1658779369739,"results":"17","hashOfConfig":"12"},{"size":681,"mtime":1663371847490,"results":"18","hashOfConfig":"12"},{"size":68,"mtime":1663371847491,"results":"19","hashOfConfig":"12"},{"size":1113,"mtime":1663371847491,"results":"20","hashOfConfig":"12"},{"size":4369,"mtime":1663876679323,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"192qmw1",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":30,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":2,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":2,"source":null},"/Users/alexwlezien/Friktion/volt/friktion-utils/src/associatedToken.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/index.ts",["52"],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/instructionHelpers.ts",["53","54","55","56","57","58","59"],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/sendTransactionHelpers.ts",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],["94"],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/token.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/TimeoutError.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/TransactionError.ts",[],["95","96"],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionErrors/index.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/utils.ts",[],[],"/Users/alexwlezien/Friktion/volt/friktion-utils/src/transactionMachine.ts",["97","98","99","100","101"],["102","103","104"],{"ruleId":"105","severity":1,"message":"106","line":1,"column":1,"nodeType":null,"messageId":"107","endLine":7,"endColumn":38,"fix":"108"},{"ruleId":"109","severity":2,"message":"110","line":3,"column":3,"nodeType":"111","messageId":"112","endLine":3,"endColumn":13,"fix":"113"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":3,"nodeType":"111","messageId":"112","endLine":3,"endColumn":13},{"ruleId":"109","severity":2,"message":"116","line":10,"column":25,"nodeType":"111","messageId":"112","endLine":10,"endColumn":30,"fix":"117"},{"ruleId":"114","severity":1,"message":"118","line":10,"column":25,"nodeType":"111","messageId":"112","endLine":10,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":96,"column":43,"nodeType":"121","messageId":"122","endLine":96,"endColumn":46,"suggestions":"123"},{"ruleId":"124","severity":2,"message":"125","line":101,"column":3,"nodeType":"126","messageId":"127","endLine":101,"endColumn":16},{"ruleId":"128","severity":2,"message":"129","line":103,"column":60,"nodeType":"111","messageId":"130","endLine":103,"endColumn":65},{"ruleId":"131","severity":2,"message":"132","line":73,"column":26,"nodeType":"133","messageId":"134","endLine":73,"endColumn":41},{"ruleId":"135","severity":2,"message":"136","line":73,"column":26,"nodeType":"133","messageId":"137","endLine":73,"endColumn":41},{"ruleId":"135","severity":2,"message":"138","line":78,"column":7,"nodeType":"133","messageId":"137","endLine":78,"endColumn":23},{"ruleId":"135","severity":2,"message":"136","line":79,"column":64,"nodeType":"133","messageId":"137","endLine":79,"endColumn":79},{"ruleId":"139","severity":2,"message":"140","line":80,"column":5,"nodeType":"141","messageId":"142","endLine":80,"endColumn":53},{"ruleId":"135","severity":2,"message":"143","line":80,"column":18,"nodeType":"133","messageId":"137","endLine":80,"endColumn":39},{"ruleId":"144","severity":2,"message":"145","line":80,"column":18,"nodeType":"133","messageId":"146","endLine":80,"endColumn":39},{"ruleId":"131","severity":2,"message":"147","line":82,"column":22,"nodeType":"148","messageId":"149","endLine":82,"endColumn":48},{"ruleId":"150","severity":2,"message":"151","line":141,"column":3,"nodeType":"152","messageId":"153","endLine":153,"endColumn":8,"suggestions":"154"},{"ruleId":"150","severity":2,"message":"151","line":146,"column":7,"nodeType":"152","messageId":"153","endLine":148,"endColumn":10,"suggestions":"155"},{"ruleId":"119","severity":1,"message":"120","line":162,"column":17,"nodeType":"121","messageId":"122","endLine":162,"endColumn":20,"suggestions":"156"},{"ruleId":"135","severity":2,"message":"157","line":163,"column":9,"nodeType":"133","messageId":"137","endLine":163,"endColumn":20},{"ruleId":"124","severity":2,"message":"125","line":210,"column":3,"nodeType":"126","messageId":"127","endLine":210,"endColumn":16},{"ruleId":"158","severity":2,"message":"159","line":211,"column":9,"nodeType":"160","messageId":"161","endLine":211,"endColumn":59},{"ruleId":"144","severity":2,"message":"145","line":211,"column":27,"nodeType":"133","messageId":"146","endLine":211,"endColumn":49},{"ruleId":"158","severity":2,"message":"159","line":212,"column":9,"nodeType":"160","messageId":"161","endLine":212,"endColumn":64},{"ruleId":"135","severity":2,"message":"162","line":212,"column":30,"nodeType":"133","messageId":"137","endLine":212,"endColumn":54},{"ruleId":"144","severity":2,"message":"145","line":212,"column":30,"nodeType":"133","messageId":"146","endLine":212,"endColumn":54},{"ruleId":"119","severity":1,"message":"120","line":213,"column":17,"nodeType":"121","messageId":"122","endLine":213,"endColumn":20,"suggestions":"163"},{"ruleId":"124","severity":2,"message":"125","line":220,"column":3,"nodeType":"126","messageId":"127","endLine":220,"endColumn":16},{"ruleId":"158","severity":2,"message":"159","line":221,"column":9,"nodeType":"160","messageId":"161","endLine":221,"endColumn":72},{"ruleId":"144","severity":2,"message":"145","line":221,"column":21,"nodeType":"133","messageId":"146","endLine":221,"endColumn":43},{"ruleId":"135","severity":2,"message":"164","line":222,"column":7,"nodeType":"133","messageId":"137","endLine":222,"endColumn":16},{"ruleId":"165","severity":2,"message":"166","line":223,"column":21,"nodeType":"167","messageId":"168","endLine":223,"endColumn":75},{"ruleId":"135","severity":2,"message":"164","line":223,"column":58,"nodeType":"133","messageId":"137","endLine":223,"endColumn":67},{"ruleId":"139","severity":2,"message":"140","line":225,"column":3,"nodeType":"141","messageId":"142","endLine":225,"endColumn":21},{"ruleId":"135","severity":2,"message":"169","line":225,"column":10,"nodeType":"133","messageId":"137","endLine":225,"endColumn":20},{"ruleId":"150","severity":2,"message":"151","line":268,"column":3,"nodeType":"152","messageId":"153","endLine":276,"endColumn":8,"suggestions":"170"},{"ruleId":"150","severity":2,"message":"151","line":271,"column":7,"nodeType":"152","messageId":"153","endLine":273,"endColumn":10,"suggestions":"171"},{"ruleId":"119","severity":1,"message":"120","line":284,"column":17,"nodeType":"121","messageId":"122","endLine":284,"endColumn":20,"suggestions":"172"},{"ruleId":"135","severity":2,"message":"157","line":285,"column":9,"nodeType":"133","messageId":"137","endLine":285,"endColumn":20},{"ruleId":"150","severity":2,"message":"151","line":343,"column":5,"nodeType":"152","messageId":"153","endLine":427,"endColumn":10,"suggestions":"173"},{"ruleId":"114","severity":1,"message":"174","line":355,"column":20,"nodeType":"111","messageId":"112","endLine":355,"endColumn":27},{"ruleId":"150","severity":2,"message":"151","line":376,"column":9,"nodeType":"152","messageId":"153","endLine":422,"endColumn":14,"suggestions":"175"},{"ruleId":"119","severity":1,"message":"120","line":66,"column":10,"nodeType":"121","messageId":"122","endLine":66,"endColumn":13,"suggestions":"176","suppressions":"177"},{"ruleId":"158","severity":2,"message":"159","line":23,"column":7,"nodeType":"178","messageId":"161","endLine":23,"endColumn":67,"suppressions":"179"},{"ruleId":"135","severity":2,"message":"180","line":23,"column":31,"nodeType":"133","messageId":"137","endLine":23,"endColumn":67,"suppressions":"181"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":1,"nodeType":null,"messageId":"107","endLine":15,"endColumn":54,"fix":"184"},{"ruleId":"185","severity":1,"message":"186","line":12,"column":8,"nodeType":"187","endLine":12,"endColumn":30,"fix":"188"},{"ruleId":"189","severity":2,"message":"190","line":15,"column":1,"nodeType":"191","messageId":"192","endLine":15,"endColumn":54,"fix":"193"},{"ruleId":"185","severity":1,"message":"186","line":15,"column":31,"nodeType":"187","endLine":15,"endColumn":53},{"ruleId":"194","severity":2,"message":"195","line":85,"column":21,"nodeType":"196","messageId":"197","endLine":85,"endColumn":23},{"ruleId":"114","severity":1,"message":"198","line":27,"column":7,"nodeType":"111","messageId":"112","endLine":27,"endColumn":25,"suppressions":"199"},{"ruleId":"200","severity":2,"message":"201","line":81,"column":28,"nodeType":"202","messageId":"203","endLine":86,"endColumn":6,"suppressions":"204"},{"ruleId":"205","severity":2,"message":"206","line":89,"column":12,"nodeType":"187","messageId":"197","endLine":89,"endColumn":16,"suppressions":"207"},"simple-import-sort/exports","Run autofix to sort these exports!","sort",{"range":"208","text":"209"},"unused-imports/no-unused-imports","'Commitment' is defined but never used.","Identifier","unusedVar",{"range":"210","text":"211"},"@typescript-eslint/no-unused-vars","'Commitment' is defined but never used. Allowed unused vars must match /^_/u.","'sleep' is defined but never used.",{"range":"212","text":"211"},"'sleep' is defined but never used. Allowed unused vars must match /^_/u.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["213","214"],"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment","@typescript-eslint/restrict-template-expressions","Invalid type \"PublicKey\" of template literal expression.","invalidType","@typescript-eslint/no-unsafe-argument","Unsafe argument of type `any` assigned to a parameter of type `PublicKey`.","MemberExpression","unsafeArgument","@typescript-eslint/no-unsafe-member-access","Unsafe member access .publicKey on an `any` value.","unsafeMemberExpression","Unsafe member access .connected on an `any` value.","@typescript-eslint/no-unsafe-return","Unsafe return of an `any` typed value.","ReturnStatement","unsafeReturn","Unsafe member access .signTransaction on an `any` value.","@typescript-eslint/no-unsafe-call","Unsafe call of an `any` typed value.","unsafeCall","Unsafe spread of an `any` array type.","SpreadElement","unsafeArraySpread","@typescript-eslint/no-floating-promises","Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["215"],["216"],["217","218"],"Unsafe member access .timeout on an `any` value.","@typescript-eslint/no-unsafe-assignment","Unsafe assignment of an `any` value.","VariableDeclarator","anyAssignment","Unsafe member access .toString on an `any` value.",["219","220"],"Unsafe member access .error on an `any` value.","@typescript-eslint/restrict-plus-operands","Operands of '+' operation with any is possible only with string, number, bigint or any","BinaryExpression","notValidAnys","Unsafe member access .result on an `any` value.",["221"],["222"],["223","224"],["225"],"'context' is defined but never used. Allowed unused args must match /^_/u.",["226"],["227","228"],["229"],"AssignmentExpression",["230"],"Unsafe member access .InstructionError on an `any` value.",["231"],"simple-import-sort/imports","Run autofix to sort these imports!",{"range":"232","text":"233"},"import/no-duplicates","'./instructionHelpers' imported multiple times.","Literal",{"range":"234","text":"235"},"@typescript-eslint/consistent-type-imports","All imports in the declaration are only used as types. Use `import type`.","ImportDeclaration","typeOverValue",{"range":"236","text":"237"},"no-empty","Empty block statement.","BlockStatement","unexpected","'TransactionMachine' is defined but never used. Allowed unused vars must match /^_/u.",["238"],"@typescript-eslint/no-misused-promises","Promise returned in function argument where a void return was expected.","ArrowFunctionExpression","voidReturnArgument",["239"],"no-constant-condition","Unexpected constant condition.",["240"],[0,239],"export * from \"./associatedToken\";\nexport * from \"./instructionHelpers\";\nexport * from \"./sendTransactionHelpers\";\nexport * from \"./token\";\nexport * from \"./transactionErrors\";\nexport * from \"./transactionMachine\";\nexport * from \"./utils\";",[67,81],"",[271,278],{"messageId":"241","fix":"242","desc":"243"},{"messageId":"244","fix":"245","desc":"246"},{"messageId":"247","fix":"248","desc":"249"},{"messageId":"247","fix":"250","desc":"249"},{"messageId":"241","fix":"251","desc":"243"},{"messageId":"244","fix":"252","desc":"246"},{"messageId":"241","fix":"253","desc":"243"},{"messageId":"244","fix":"254","desc":"246"},{"messageId":"247","fix":"255","desc":"249"},{"messageId":"247","fix":"256","desc":"249"},{"messageId":"241","fix":"257","desc":"243"},{"messageId":"244","fix":"258","desc":"246"},{"messageId":"247","fix":"259","desc":"249"},{"messageId":"247","fix":"260","desc":"249"},{"messageId":"241","fix":"261","desc":"243"},{"messageId":"244","fix":"262","desc":"246"},{"kind":"263","justification":"211"},{"kind":"263","justification":"211"},{"kind":"263","justification":"211"},[0,361],"import type * as anchor from \"@project-serum/anchor\";\nimport type {\n  Commitment,\n  Signer,\n  TransactionInstruction,\n  TransactionSignature,\n} from \"@solana/web3.js\";\n\nimport {\n  sendIns,\n  sendInsList,\n  sendInsListCatching,\n} from \"./instructionHelpers\";\nimport { SendInsParams } from \"./instructionHelpers\";\nimport { sleep } from \"./sendTransactionHelpers\";",[226,362]," SendInsParams } from \"./instructionHelpers\";\n\nimport { sleep } from \"./sendTransactionHelpers\";\n",[314,314]," type",{"kind":"263","justification":"211"},{"kind":"263","justification":"211"},{"kind":"263","justification":"211"},"suggestUnknown",{"range":"264","text":"265"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"264","text":"266"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","floatingFixVoid",{"range":"267","text":"268"},"Add void operator to ignore.",{"range":"269","text":"270"},{"range":"271","text":"265"},{"range":"271","text":"266"},{"range":"272","text":"265"},{"range":"272","text":"266"},{"range":"273","text":"274"},{"range":"275","text":"270"},{"range":"276","text":"265"},{"range":"276","text":"266"},{"range":"277","text":"278"},{"range":"279","text":"280"},{"range":"281","text":"265"},{"range":"281","text":"266"},"directive",[2118,2121],"unknown","never",[3450,3864],"void (async () => {\n    // TODO - make sure this works well on mainnet\n    while (!done && getUnixTs() - startTime < timeout / 1000) {\n      await sleep(retrySleep);\n      // console.log(new Date().toUTCString(), ' sending tx ', txid);\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      if (retrySleep <= 6000) {\n        retrySleep = retrySleep * 2;\n      }\n    }\n  })();",[3687,3773],"void connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });",[4010,4013],[5636,5639],[7008,7233],"void (async () => {\n    await sleep(500);\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(1000);\n    }\n  })();",[7108,7194],[7378,7381],[9100,11580],"void (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log(new Date().toUTCString(), \"Timed out for txid: \", txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        subscriptionId = connection.onSignature(\n          txid,\n          (result, context) => {\n            subscriptionId = undefined;\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              // lastSlot = context?.slot;\n              resolve(result);\n            }\n          },\n          \"confirmed\"\n        );\n      } catch (e) {\n        done = true;\n        console.log(new Date().toUTCString(), \"WS error in setup\", txid, e);\n      }\n      let retrySleep = 1500;\n      console.log(\"polling tx \", txid);\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        await sleep(retrySleep);\n        (async () => {\n          try {\n            const response = await connection.getSignatureStatuses([txid]);\n\n            const result = response && response.value[0];\n            if (!done) {\n              if (!result) {\n                // console.log(\"REST null result for\", txid, result);\n              } else if (result.err) {\n                console.log(\n                  new Date().toUTCString(),\n                  \"REST error for\",\n                  txid,\n                  result\n                );\n                done = true;\n                reject(result.err);\n              } else if (\n                !(\n                  result.confirmations ||\n                  confirmLevels.includes(result.confirmationStatus)\n                )\n              ) {\n                console.log(\n                  new Date().toUTCString(),\n                  \"REST not confirmed\",\n                  txid,\n                  result\n                );\n              } else {\n                // lastSlot = response?.context?.slot;\n                // console.log('REST confirmed', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log(\n                new Date().toUTCString(),\n                \"REST connection error: txid\",\n                txid,\n                e\n              );\n            }\n          }\n        })();\n        if (retrySleep <= 1600) {\n          retrySleep = retrySleep * 2;\n        }\n      }\n    })();",[10041,11479],"void (async () => {\n          try {\n            const response = await connection.getSignatureStatuses([txid]);\n\n            const result = response && response.value[0];\n            if (!done) {\n              if (!result) {\n                // console.log(\"REST null result for\", txid, result);\n              } else if (result.err) {\n                console.log(\n                  new Date().toUTCString(),\n                  \"REST error for\",\n                  txid,\n                  result\n                );\n                done = true;\n                reject(result.err);\n              } else if (\n                !(\n                  result.confirmations ||\n                  confirmLevels.includes(result.confirmationStatus)\n                )\n              ) {\n                console.log(\n                  new Date().toUTCString(),\n                  \"REST not confirmed\",\n                  txid,\n                  result\n                );\n              } else {\n                // lastSlot = response?.context?.slot;\n                // console.log('REST confirmed', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log(\n                new Date().toUTCString(),\n                \"REST connection error: txid\",\n                txid,\n                e\n              );\n            }\n          }\n        })();",[1345,1348]]