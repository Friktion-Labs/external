import type { PublicKey } from "@solana/web3.js";
import type BN from "bn.js";

export type VoltVault = {
  adminKey: PublicKey;
  seed: PublicKey;
  transferWindow: BN;
  startTransferTime: BN;
  endTransferTime: BN;
  initialized: unknown;
  currOptionWasSettled: unknown;
  mustSwapPremiumToUnderlying: unknown;
  nextOptionWasSet: unknown;
  firstEverOptionWasSet: unknown;
  instantTransfersEnabled: unknown;
  prepareIsFinished: unknown;
  enterIsFinished: unknown;
  roundHasStarted: unknown;
  roundNumber: BN;
  totalUnderlyingPreEnter: BN;
  totalUnderlyingPostSettle: BN;
  totalVoltTokensPostSettle: BN;
  vaultAuthority: PublicKey;
  depositPool: PublicKey;
  premiumPool: PublicKey;
  optionPool: PublicKey;
  writerTokenPool: PublicKey;
  vaultMint: PublicKey;
  underlyingAssetMint: PublicKey;
  quoteAssetMint: PublicKey;
  optionMint: PublicKey;
  writerTokenMint: PublicKey;
  optionMarket: PublicKey;
  vaultType: BN;
  underlyingAmountPerContract: BN;
  quoteAmountPerContract: BN;
  expirationUnixTimestamp: BN;
  expirationInterval: BN;
  upperBoundOtmStrikeFactor: BN;
  expired: unknown;
  serumSpotMarket: PublicKey;
  openOrdersBump: number;
  openOrdersInitBump: number;
  ulOpenOrdersBump: number;
  ulOpenOrders: PublicKey;
  ulOpenOrdersInitialized: unknown;
  bumpAuthority: number;
  serumOrderSizeOptions: BN;
  individualCapacity: BN;
  serumOrderType: BN;
  serumLimit: number;
  serumSelfTradeBehavior: number;
  serumClientOrderId: BN;
  whitelistTokenMint: PublicKey;
  pnl: PublicKey;
  extraKeyOne: PublicKey;
  capacity: BN;
};

export type VoltVaultWithKey = VoltVault & {
  voltKey: PublicKey;
};
